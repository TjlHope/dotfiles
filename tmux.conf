##########################
 ## Tmux Config - TjlH ##
##########################

## External	{{{1

# don't want it to behave as a login shell each time
# FIXME: vim-screen spawns a new shell before the intended command.
set-option -g	default-command	    "/bin/bash"
# Want to keep the COLORTERM env var so colours can be set properly in bash/vim
set-option -ag	update-environment  " COLORTERM"
# Try and fix restarting X
set-option -ag	update-environment  " XDG_SESSION_COOKIE"
set-option -ag	update-environment  " SESSION_MANAGER"
# Allow use of terminal alternate screen feature (terminfo)
set-window-option -g	alternate-screen    on	# def: on

## General	{{{1

bind-key    r	source-file	~/.tmux.conf	# Allow Reload
set-option -g	history-limit	1536		# Big History
set-option -s	escape-time	300		# Require faster key repetition

# Use utf8 (autoset if found from LC_ALL, LC_CTYPE, or LANG)
#set-option -g	status-utf8	on	# def: off
#set-window-option -g	utf8	on	# def: off

#bind-key    t	set-environment TERM "screen-color"	# FIXME: doesn't do anything
#bind-key    T	set-environment TERM "screen-256color"	# FIXME: doesn't do anything

### Prefix Key	{{{2
#set-option -g prefix S-Escape
set-option -g	prefix	`		# def: C-b	# screen def: C-a
bind-key -r `	send-prefix		# def: C-b
set-option -g	prefix2 C-a		# def: none
bind-key -r a	send-prefix		# def: C-b	# screen def: a
bind-key -r C-a	send-prefix		# def: C-b	# screen def: a
unbind-key  C-b				# def: send-prefix

### Session Locking  {{{2
#set-option -g	lock-after-time	900	# def: 0	# enable locking
set-option -g	lock-server	off	# def: on	# independent locking
# (I don't normally have lock(1) so try and use vlock first...)
set-option -g	lock-command	"vlock || lock -np || away || busybox vlock"

bind-key -n C-M-l   run-shell "sudo xmtlock >/dev/null"
bind-key -n C-M-L   run-shell "sudo xmtlock all >/dev/null"


## Creation	{{{1

### sessions	{{{2
bind-key    C	new-session		# def: none
#bind-key    N	new-session		# def: none

### windows	{{{2
bind-key    c	new-window		# def: c
#bind-key    n	new-window		# def: c

### panes	{{{2
bind-key    s	split-window		# def: "	# horizontal split
bind-key    S	split-window -h		# def: %	# vertical split


## Navigation	{{{1

# vi like (auto set if 'vi' in $EDITOR)
#set-option -g	status-keys	    vi
#set-window-option -g	mode-keys   vi

### sessions	{{{2
bind-key -r _	switch-client -p	# def: (
bind-key -r +	switch-client -n	# def: )
bind-key    BTab	switch-client -l	# def: L
bind-key    S-Bspace	switch-client -l	# def: L
bind-key    W	choose-session		# def: s	# moniker: [W]hich session?

### windows	{{{2
set-option -g	base-index	1	# def: 0	# 0 on far side
bind-key -r -	select-window -p	# def: p
bind-key -r =	select-window -n	# def: n
bind-key    Tab	select-window -l	# def: none	# screen def: C-a ??
bind-key    Bspace	select-window -l	# def: none
bind-key    w	choose-window		# def: w	# moniker: [w]hich [w]indow?

### panes	{{{2
bind-key -r h	select-pane -L		# def: Left
bind-key -r j	select-pane -D		# def: Down
bind-key -r k	select-pane -U		# def: Up
bind-key -r l	select-pane -R		# def: Right
#bind-key -r p	select-pane -t :.+	# def: o	# next pane numerically
#bind-key -r P	select-pane -t :.-	# def: none	# previous numerically
#bind-key    ;	select-pane -l		# def: ;	# FIXME: can't bind ;

## Manipulation {{{1

### sessions	{{{2
bind-key    N	command-prompt -I '#S' "rename-session '%%'"	# def: $

### windows	{{{2
#bind-key -r <	move-window -t -:	# def: none	# FIXME: no +- for sessions
#bind-key -r >	move-window -t +:	# def: none	# FIXME: no +- for sessions
bind-key    M	choose-session "move-window -t '%%'"	# def: none
bind-key    n	command-prompt -I '#W' "rename-window '%%'"	# def: ,
bind-key    i	command-prompt -I '#I' "move-window -t '%%'"	# def: .
bind-key -r (	swap-window -t :-	# def: none
bind-key -r )	swap-window -t :+	# def: none

### panes	{{{2
bind-key -r b	break-pane		# def: !
bind-key -r B	break-pane -d		# background break
bind-key -r u	join-pane -t :+		# unbreak, -r allows cycling windows
bind-key -r U	join-pane -t :-		# unbreak backwards
bind-key -r v	join-pane -ht :+	# unbreak (vertical split)
bind-key -r V	join-pane -ht :-	# unbreak (vertical split) backwards
bind-key    m	choose-window "join-pane -t '%%'"	# def: none
bind-key    A	set-window-option automatic-rename	# def: none	# toggle
bind-key -r H	resize-pane -L		# def: C-Left
bind-key -r J	resize-pane -D		# def: C-Down
bind-key -r K	resize-pane -U		# def: C-Up
bind-key -r L	resize-pane -R		# def: C-Right
bind-key -r o	rotate-window -D	# def: C-o
bind-key -r O	rotate-window -U	# def: none
bind-key -r {	swap-pane -D		# def: }
bind-key -r }	swap-pane -U		# def: {

### Mouse Interaction  {{{2
set-option -g	mouse-select-window on	# def: off
set-option -g	mouse-resize-pane   on	# def: off
set-option -g	mouse-select-pane   on	# def: off
set-window-option -g	mode-mouse  on	# def: off

## Destruction	{{{1

set-option -g	detach-on-destroy  off	# def: on	# on/off=>detach/switch

### sessions	{{{2
#FIXME: confirm-before cannot take options.
#bind-key    Q	confirm-before -p "kill-session #S and exit? (y/n)" run-shell "tmux set-option -s -t '#S' detach-on-destroy on\\; kill-session -t '#S'"
#bind-key    C-x	choose-session "confirm-before -p 'kill-session? (y/n)' kill-session -t '#S'"
bind-key    X	confirm-before -p "kill-session '#S'? (y/n)" kill-session

### windows	{{{2
bind-key    x	confirm-before -p "kill-window '#I:#W'? (y/n)" kill-window

### panes	{{{2
bind-key    DC	confirm-before -p "kill-pane '#P:#T'? (y/n)" kill-pane


## Viewing	{{{1

set-window-option -g	aggressive-resize   on	# Always maximise window

### copy mode	{{{2
bind-key    Escape  copy-mode		# def: [
bind-key    y	    copy-mode		# def: [
# put buffer into X selection:
bind-key    Y	    run-shell 'tmux save-buffer - | xclip -i -se p'
bind-key    C-y	    run-shell 'tmux save-buffer - | xclip -i -se c'
bind-key    p	    paste-buffer	# def: ]
# Past X selection:
bind-key    P	    run-shell 'xclip -o -se p | tmux load-buffer - \; paste-buffer'
bind-key    C-p	    run-shell 'xclip -o -se c | tmux load-buffer - \; paste-buffer'
bind-key    C-w	    choose-buffer	# def: =	# Moniker [W]hich buffer
bind-key -n C-Up    run-shell 'tmux copy-mode \; scroll-up'	# def: none	# FIXME
bind-key -n C-PgUp  copy-mode -u	# def: prefix PPage	# FIXME doesn't recieve key
#bind-key -n S-Up copy-mode | top-line	# Scroll up buffer like a vt
#bind-key -n S-PPage copy-mode -u	# Scroll up buffer like a vt
bind-key -t vi-copy	Escape	cancel		# def: C-c
bind-key -t vi-copy	v	begin-selection	# def: Space	# like 'visual'
bind-key -t vi-copy	y	copy-selection	# def: Enter	# like 'yank'
bind-key -t vi-copy	C-Up	scroll-up	# def: C-Up	# FIXME doesn't recieve key
bind-key -t vi-copy	C-Down	scroll-down	# def: C-Down	# FIXME doesn't recieve key
bind-key -t vi-copy	C-PgUp	page-up		# def: PPage	# FIXME doesn't recieve key
bind-key -t vi-copy	C-PgDn	page-down	# def: NPage	# FIXME doesn't recieve key

### edit mode	{{{2
#bind-key -t	vi-edit	Escape	switch-mode	# def: Escape
bind-key -t	vi-edit	C-c	cancel		# def: C-c
bind-key -t	vi-edit	Tab	complete	# def: Tab
bind-key -t	vi-edit	C-u	delete-line	# def: C-u
bind-key -t	vi-edit	Up	history-up	# def: none
bind-key -t	vi-edit	Down	history-down	# def: none
bind-key -t	vi-edit	Left	cursor-left	# def: none
bind-key -t	vi-edit	Right	cursor-right	# def: none
#bind-key -ct	vi-edit	i	switch-mode	# def: i
bind-key -ct	vi-edit	Escape	cancel		# def: C-c
#bind-key -ct	vi-edit	A	end-of-line | switch-mode
#bind-key -ct	vi-edit	C	delete-end-of-line | switch-mode
#bind-key -ct	vi-edit	S	delete-line | switch-mode
bind-key -ct	vi-edit	p	paste


## Appearance	{{{1

### Monitor  {{{2
set-window-option -g	monitor-activity    off		    # something happened
set-window-option -g	monitor-content	    "* [/~]* [$#] " # [bash] prompt appeared
set-window-option -g	monitor-silence	    0		    # nothing for N seconds
# Flash status line when monitored event occurs
set-option -g	visual-activity		    on	# def: off
set-option -g	visual-content		    on	# def: off
set-option -g	visual-silence		    on	# def: off
set-option -g	display-time		    700

### Status line	{{{2
set-option -g	status-interval	    5		# def: 15	# redraw time
set-option -g	status-justify	    centre	# def: left	# windows location
# status-{left,right} def:		'[#S]'		'"#24T" %T %d-%b-%y'
set-option -g	status-left	    '[%R %d-%b-%y #(cpu_mem_usage -b -h1) ]'
set-option -g	status-right	    '[#S:#I.#P]'
# status-{left,right}-length def:	10		40
set-option -g	status-left-length  23		# def: 10
set-option -g	status-right-length 40		# def: 40

### Prettify	{{{2
#### Message	{{{3
set-option -g	message-attr		bold			# def: none
set-option -g	message-bg		'#004400'#'#440044'	# def: yellow
set-option -g	message-fg		brightwhite		# def: black
set-option -g	message-command-attr	none			# def: none
set-option -g	message-command-bg	'#004400'#'#440044'	# def: black
set-option -g	message-command-fg	white			# def: yellow
#### Status	{{{3
set-option -g	status-attr		none			# def: none
set-option -g	status-bg		'#111111'		# def: green
set-option -g	status-fg		white			# def: black
# status-\(left\|right\)-\(.*\) def: status-\2
set-option -g	status-left-attr	none
set-option -g	status-left-bg		'#004400'#'#990099'
set-option -g	status-left-fg		black
set-option -g	status-right-attr	none
set-option -g	status-right-bg		'#004400'#'#990099'
set-option -g	status-right-fg		black
#### Window (Status)	{{{3
# window-status-\(.*\) def: status-\1
#set-window-option -g	window-status-attr
#set-window-option -g	window-status-bg 
#set-window-option -g	window-status-fg
# window-status-\(current\|content\|activity\)-\(.*\) def: window-status-\2
set-window-option -g	window-status-current-attr	bold
set-window-option -g	window-status-current-bg	'#007700'#'#AA00AA'
set-window-option -g	window-status-current-fg	white
set-window-option -g	window-status-content-attr	none	# def: reverse
#set-window-option -g	window-status-content-bg
set-window-option -g	window-status-content-fg	green
set-window-option -g	window-status-activity-attr	none	# def: reverse
#set-window-option -g	window-status-activity-bg	'#333333'
set-window-option -g	window-status-activity-fg	green#brightmagenta

# vim: sts=4 fdm=marker
