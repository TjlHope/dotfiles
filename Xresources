
!// Urxvt resources
!//////////////////

!// depth: bitdepth
!//   Compile xft: Attempt to find a visual with the given bit depth
URxvt*.depth:		32

!// buffered: boolean
!//   Compile xft: Turn on/off double-buffering for xft (default enabled). On
!//   some card/driver combination enabling it slightly decreases performance,
!//   on most it greatly helps it. The slowdown is small, so it should normally
!//   be enabled.

!// geometry: geom
!//   Create the window with the specified X window geometry [default 80x24]
URxvt*.geometry:	180x65

!// the colours I'm using
!#define _black	#000000
!#define _red	#cd5c5c
!#define _green	#2e8b57
!#define _yellow #daa520
!#define _blue	#5757d7
!#define _magenta #875f87
!#define _cyan	#578787
!#define _white	#cccccc
!#define _BLACK	#4d4d4d
!#define _RED	#ffa0a0
!#define _GREEN	#98fb98
!#define _YELLOW #foe68c
!#define _BLUE	#6699ff
!#define _MAGENTA #af87d7
!#define _CYAN	#87ebeb
!#define _WHITE	#ffffff

!// xfce4-terminal defaults
#define _black	#000000
#define _red	#aa0000
#define _green	#00aa00
#define _yellow #aa5500
#define _blue	#0000aa
#define _magenta #aa00aa
#define _cyan	#00aaaa
#define _white	#aaaaaa
#define _BLACK	#555555
#define _RED	#ff5555
#define _GREEN	#55ff55
#define _YELLOW #ffff55
#define _BLUE	#5555ff
#define _MAGENTA #ff55ff
#define _CYAN	#55ffff
#define _WHITE	#ffffff

!// background: colour
!//   Use the specified colour as the window's background colour [default White]
URxvt*.background:	[85]_black

!// foreground: colour
!//   Use the specified colour as the window's foreground colour [default Black]
URxvt*.foreground:	_white

!// colorn: colour
!//   Use the specified colour for the colour value n, where 0-7 corresponds to
!//   low-intensity (normal) colours and 8-15 corresponds to high-intensity
!//   (bold = bright foreground, blink = bright background) colours. The
!//   canonical names are as follows: 0=black, 1=red, 2=green, 3=yellow,
!//   4=blue, 5=magenta, 6=cyan, 7=white, but the actual colour names used are
!//   listed in the COLOURS AND GRAPHICS section.
!//
!//   Colours higher than 15 cannot be set using resources (yet), but can be
!//   changed using an escape command (see urxvt(7)).
!//
!//   Colours 16-79 form a standard 4x4x4 colour cube (the same as xterm with
!//   88 colour support). Colours 80-87 are evenly spaces grey steps.
URxvt*.color0:		_black
URxvt*.color1:		_red
URxvt*.color2:		_green
URxvt*.color3:		_yellow
URxvt*.color4:		_blue
URxvt*.color5:		_magenta
URxvt*.color6:		_cyan
URxvt*.color7:		_white
URxvt*.color8:		_BLACK
URxvt*.color9:		_RED
URxvt*.color10:		_GREEN
URxvt*.color11:		_YELLOW
URxvt*.color12:		_BLUE
URxvt*.color13:		_MAGENTA
URxvt*.color14:		_CYAN
URxvt*.color15:		_WHITE

!// colorBD: colour
!// colorIT: colour
!//   Use the specified colour to display bold or italic characters when the
!//   foreground colour is the default. If font styles are not available
!//   (Compile styles) and this option is unset, reverse video is used instead.

!// colorUL: colour
!//   Use the specified colour to display underlined characters when the
!//   foreground colour is the default.

!// underlineColor: colour
!//   If set, use the specified colour as the colour for the underline itself.
!//   If unset, use the foreground colour.

!// highlightColor: colour
!//   If set, use the specified colour as the background for highlighted
!//   characters. If unset, use reverse video.

!// highlightTextColor: colour
!//   If set and highlightColor is set, use the specified colour as the
!//   foreground for highlighted characters.

!// cursorColor: colour
!//   Use the specified colour for the cursor. The default is to use the
!//   foreground colour

!// cursorColor2: colour
!//   Use the specified colour for the colour of the cursor text. For this to
!//   take effect, cursorColor must also be specified. The default is to use
!//   the background colour.

!// reverseVideo: boolean
!//   True: simulate reverse video by foreground and background colours. False:
!//   regular screen colours [default].  See note in COLOURS AND GRAPHICS
!//   section.

!// jumpScroll: boolean
!//   True: specify that jump scrolling should be used. When receiving lots of
!//   lines, urxvt will only scroll once a whole screen height of lines has
!//   been read, resulting in fewer updates while still displaying every
!//   received line
!//
!//   False: specify that smooth scrolling should be used. urxvt will force a
!//   screen refresh on each new line it received

!// skipScroll: boolean
!//   True: (the default) specify that skip scrolling should be used. When
!//   receiving lots of lines, urxvt will only scroll once in a while (around
!//   60 times per second), resulting in far fewer updates. This can result in
!//   urxvt not ever displaying some of the lines it receives
!//
!//   False: specify that everything is to be displayed, even if the refresh is
!//   too fast for the human eye to read anything (or the monitor to display
!//   anything)

!// fading: number
!//   Fade the text by the given percentage when focus is lost

!// fadeColor: colour
!//   Fade to this colour, when fading is used (see fading:). The default
!//   colour is black

!// iconFile: file
!//   Set the application icon pixmap
URxvt*.iconFile:	/usr/share/icons/Faenza/apps/scalable/utilities-terminal.svg

!// scrollColor: colour
!//   Use the specified colour for the scrollbar [default #B2B2B2].

!// troughColor: colour
!//   Use the specified colour for the scrollbar's trough area [default
!//   #969696]. Only relevant for rxvt (non XTerm/NeXT) scrollbar.

!// borderColor: colour
!//   The colour of the border around the text area and between the scrollbar
!//   and the text.

!// font: fontlist
!//   Select the fonts to be used. This is a comma separated list of font names
!//   that are checked in order when trying to find glyphs for characters. The
!//   first font defines the cell size for characters; other fonts might be
!//   smaller, but not (in general) larger. A (hopefully) reasonable default
!//   font list is always appended to it
!//
!//   Each font can either be a standard X11 core font (XLFD) name, with
!//   optional prefix "x:" or a Xft font (Compile xft), prefixed with "xft:".
!//
!//   In addition, each font can be prefixed with additional hints and
!//   specifications enclosed in square brackets ("[]"). The only available
!//   hint currently is "codeset=codeset-name", and this is only used for Xft
!//   fonts.
!//
!//   For example, this font resource
!//
!//      URxvt.font: 9x15bold,\
!//                  -misc-fixed-bold-r-normal--15-140-75-75-c-90-iso10646-1,\
!//                  -misc-fixed-medium-r-normal--15-140-75-75-c-90-iso10646-1, \
!//                  [codeset=JISX0208]xft:Kochi Gothic:antialias=false, \
!//                  xft:Code2000:antialias=false
!//
!//   specifies five fonts to be used. The first one is "9x15bold" (actually
!//   the iso8859-1 version of the second font), which is the base font
!//   (because it is named first) and thus defines the character cell grid to
!//   be 9 pixels wide and 15 pixels high.
!//
!//   The second font is just used to add additional unicode characters not in
!//   the base font, likewise the third, which is unfortunately non-bold, but
!//   the bold version of the font does contain fewer characters, so this is a
!//   useful supplement.
!//
!//   The third font is an Xft font with aliasing turned off, and the
!//   characters are limited to the JIS 0208 codeset (i.e. japanese kanji). The
!//   font contains other characters, but we are not interested in them.
!//
!//   The last font is a useful catch-all font that supplies most of the
!//   remaining unicode characters.
URxvt*.font:		-xos4-terminus-medium-r-normal--14-140-72-72-c-80-iso8859-1,\
			-xos4-terminus-medium-r-normal--14-140-72-72-c-80-iso10646-1

!// boldFont: fontlist
!// italicFont: fontlist
!// boldItalicFont: fontlist
!//   The font list to use for displaying bold, italic or bold italic
!//   characters, respectively.
!//
!//   If specified and non-empty, then the syntax is the same as for the
!//   font-resource, and the given font list will be used as is, which makes it
!//   possible to substitute completely different font styles for bold and
!//   italic.
!//
!//   If unset (the default), a suitable font list will be synthesized by
!//   "morphing" the normal text font list into the desired shape. If that is
!//   not possible, replacement fonts of the desired shape will be tried.
!//
!//   If set, but empty, then this specific style is disabled and the normal
!//   text font will being used for the given style.
URxvt*.boldFont:	-xos4-terminus-bold-r-normal--14-140-72-72-c-80-iso8859-1,\
			-xos4-terminus-bold-r-normal--14-140-72-72-c-80-iso10646-1

!// intensityStyles: boolean
!//   When font styles are not enabled, or this option is enabled (True, the
!//   default), bold/blink font styles imply high intensity
!//   foreground/background colours. Disabling this option (False) disables
!//   this behaviour, the high intensity colours are not reachable.

!// title: string
!//   Set window title string, the default title is the command-line specified
!//   after the -e option, if any, otherwise the application name

!// iconName: string
!//   Set the name used to label the window's icon or displayed in an icon
!//   manager window, it also sets the window's title unless it is explicitly
!//   set

!// mapAlert: boolean
!//   True: de-iconify (map) on receipt of a bell character. False: no
!//   de-iconify (map) on receipt of a bell character [default].

!// urgentOnBell: boolean
!//   True: set the urgency hint for the wm on receipt of a bell character.
!//   False: do not set the urgency hint [default].
!//
!//   urxvt resets the urgency hint on every focus change.
URxvt*.urgentOnBell:	True

!// visualBell: boolean
!//   True: use visual bell on receipt of a bell character. False: no visual
!//   bell [default].

!// loginShell: boolean
!//   True: start as a login shell by prepending a `-' to argv[0] of the shell.
!//   False: start as a normal sub-shell [default].

!// utmpInhibit: boolean
!//   True: inhibit writing record into the system log file utmp. False: write
!//   record into the system log file utmp [default].

!// print-pipe: string
!//   Specify a command pipe for vt100 printer [default lpr(1)]. Use Print to
!//   initiate a screen dump to the printer and Ctrl-Print or Shift-Print to
!//   include the scrollback as well.
!//
!//   The string will be interpreted as if typed into the shell as-is.
!//
!//   Example:
!//
!//      URxvt.print-pipe: cat > $(TMPDIR=$HOME mktemp urxvt.XXXXXX)
!//
!//   This creates a new file in your home directory with the screen contents
!//   every time you hit "Print".

!// scrollstyle: mode
!//   Set scrollbar style to rxvt, plain, next or xterm. plain is the author's
!//   favourite.

!// thickness: number
!//   Set the scrollbar width in pixels.

!// scrollBar: boolean
!//   True: enable the scrollbar [default]. False: disable the scrollbar.
URxvt*.scrollBar:		False

!// scrollBar_right: boolean
!//   True: place the scrollbar on the right of the window.  False: place the
!//   scrollbar on the left of the window.

!// scrollBar_floating: boolean
!//   True: display an rxvt scrollbar without a trough. False: display an rxvt
!//   scrollbar with a trough.

!// scrollBar_align: mode
!//   Align the top, bottom or centre [default] of the scrollbar thumb with the
!//   pointer on middle button press/drag.

!// scrollTtyOutput: boolean
!//   True: scroll to bottom when tty receives output. False: do not scroll to
!//   bottom when tty receives output.
URxvt*.scrollTtyOutput:		False

!// scrollWithBuffer: boolean
!//   True: scroll with scrollback buffer when tty receives new lines (i.e.
!//   try to show the same lines) and scrollTtyOutput is False.  False: do not
!//   scroll with scrollback buffer when tty receives new lines.
URxvt*.scrollWithBuffer:	True

!// scrollTtyKeypress: boolean
!//   True: scroll to bottom when a non-special key is pressed. Special keys
!//   are those which are intercepted by rxvt-unicode for special handling and
!//   are not passed onto the shell. False: do not scroll to bottom when a
!//   non-special key is pressed.
URxvt*.scrollTtyKeypress:	True

!// saveLines: number
!//   Save number lines in the scrollback buffer [default 64]. This resource is
!//   limited on most machines to 65535.
URxvt*.saveLines:		5000

!// internalBorder: number
!//   Internal border of number pixels. This resource is limited to 100.
URxvt*.internalBorder:		0

!// externalBorder: number
!//   External border of number pixels. This resource is limited to 100.
URxvt*.externalBorder:		0

!// borderLess: boolean
!//   Set MWM hints to request a borderless window, i.e. if honoured by the WM,
!//   the rxvt-unicode window will not have window decorations.
URxvt*.borderLess:		True

!// skipBuiltinGlyphs: boolean
!//   Compile frills: Disable the usage of the built-in block graphics/line
!//   drawing characters and just rely on what the specified fonts provide. Use
!//   this if you have a good font and want to use its block graphic glyphs.
URxvt*.skipBuiltinGlyphs:	True

!// termName: termname
!//   Specifies the terminal type name to be set in the TERM environment
!//   variable.

!// lineSpace: number
!//   Specifies number of lines (pixel height) to insert between each row of
!//   the display [default 0].

!// meta8: boolean
!//   True: handle Meta (Alt) + keypress to set the 8th bit. False: handle Meta
!//   (Alt) + keypress as an escape prefix [default].

!// mouseWheelScrollPage: boolean
!//   True: the mouse wheel scrolls a page full. False: the mouse wheel scrolls
!//   five lines [default].

!// pastableTabs: boolean
!//   True: store tabs as wide characters. False: interpret tabs as cursor
!//   movement only.

!// cursorBlink: boolean
!//   True: blink the cursor. False: do not blink the cursor [default].

!// cursorUnderline: boolean
!//   True: Make the cursor underlined. False: Make the cursor a box [default].

!// pointerBlank: boolean
!//   True: blank the pointer when a key is pressed or after a set number of
!//   seconds of inactivity. False: the pointer is always visible [default].

!// pointerColor: colour
!//   Mouse pointer foreground colour.

!// pointerColor2: colour
!//   Mouse pointer background colour.

!// pointerBlankDelay: number
!//   Specifies number of seconds before blanking the pointer [default 2]. Use
!//   a large number (e.g. 987654321) to effectively disable the timeout.

!// backspacekey: string
!//   The string to send when the backspace key is pressed. If set to DEC or
!//   unset it will send Delete (code 127) or, with control, Backspace (code 8)
!//   - which can be reversed with the appropriate DEC private mode escape
!//   sequence.

!// deletekey: string
!//   The string to send when the delete key (not the keypad delete key) is
!//   pressed. If unset it will send the sequence traditionally associated with
!//   the Execute key.

!// cutchars: string
!//   The characters used as delimiters for double-click word selection
!//   (whitespace delimiting is added automatically if resource is given).
!//
!//   When the perl selection extension is in use (the default if compiled in,
!//   see the urxvtperl(3) manpage), a suitable regex using these characters
!//   will be created (if the resource exists, otherwise, no regex will be
!//   created). In this mode, characters outside ISO-8859-1 can be used.
!//
!//   When the selection extension is not used, only ISO-8859-1 characters can
!//   be used. If not specified, the built-in default is used:
!//
!//   BACKSLASH `"'&()*,;<=>?@[]^{|}

!// preeditType: style
!//   OverTheSpot, OffTheSpot, Root.

!// inputMethod: name
!//   name of inputMethod to use.

!// imLocale: name
!//   The locale to use for opening the IM. You can use an "LC_CTYPE" of e.g.
!//   "de_DE.UTF-8" for normal text processing but "ja_JP.EUC-JP" for the input
!//   extension to be able to input japanese characters while staying in
!//   another locale.

!// imFont: fontset
!//   Specify the font-set used for XIM styles "OverTheSpot" or "OffTheSpot".
!//   It must be a standard X font set (XLFD patterns separated by commas),
!//   i.e. it's not in the same format as the other font lists used in urxvt.
!//   The default will be set-up to chose *any* suitable found found,
!//   preferably one or two pixels differing in size to the base font.

!// tripleclickwords: boolean
!//   Change the meaning of triple-click selection with the left mouse button.
!//   Instead of selecting a full line it will extend the selection to the end
!//   of the logical line only.

!// insecure: boolean
!//   Enables "insecure" mode. Rxvt-unicode offers some escape sequences that
!//   echo arbitrary strings like the icon name or the locale.  This could be
!//   abused if somebody gets 8-bit-clean access to your display, whether
!//   through a mail client displaying mail bodies unfiltered or through
!//   write(1) or any other means. Therefore, these sequences are disabled by
!//   default. (Note that many other terminals, including xterm, have these
!//   sequences enabled by default, which doesn't make it safer, though).
!//
!//   You can enable them by setting this boolean resource or specifying
!//   -insecure as an option. At the moment, this enables display- answer,
!//   locale, findfont, icon label and window title requests.

!// modifier: modifier
!//   Set the key to be interpreted as the Meta key to: alt, meta, hyper,
!//   super, mod1, mod2, mod3, mod4, mod5.

!// answerbackString: string
!//   Specify the reply rxvt-unicode sends to the shell when an ENQ (control-E)
!//   character is passed through. It may contain escape values as described in
!//   the entry on keysym following.

!// secondaryScreen: boolean
!//   Turn on/off secondary screen (default enabled).

!// secondaryScroll: boolean
!//   Turn on/off secondary screen scroll (default enabled). If this option is
!//   enabled, scrolls on the secondary screen will change the scrollback
!//   buffer and, when secondaryScreen is off, switching to/from the secondary
!//   screen will instead scroll the screen up.

!// hold: boolean
!//   Turn on/off hold window after exit support. If enabled, urxvt will not
!//   immediately destroy its window when the program executed within it exits.
!//   Instead, it will wait till it is being killed or closed by the user.
!URxvt*.hold:	True

!// chdir: path
!//   Sets the working directory for the shell (or the command specified via
!//   -e). The path must be an absolute path and it must exist for urxvt to
!//   start. If it isn't specified then the current working directory will be
!//   used.

!// keysym.sym: string
!//   Compile frills: Associate string with keysym sym. The intervening
!//   resource name keysym. cannot be omitted.
!//
!//   The format of sym is "(modifiers-)key", where modifiers can be any
!//   combination of ISOLevel3, AppKeypad, Control, NumLock, Shift, Meta, Lock,
!//   Mod1, Mod2, Mod3, Mod4, Mod5, and the abbreviated I, K, C, N, S, M, A, L,
!//   1, 2, 3, 4, 5.
!//
!//   The NumLock, Meta and ISOLevel3 modifiers are usually aliased to whatever
!//   modifier the NumLock key, Meta/Alt keys or ISO Level3 Shift/AltGr keys
!//   are being mapped. AppKeypad is a synthetic modifier mapped to the current
!//   application keymap mode state.
!//
!//   The spellings of key can be obtained by using xev(1) command or searching
!//   keysym macros from /usr/X11R6/include/X11/keysymdef.h and omitting the
!//   prefix XK_. Alternatively you can specify key by its hex keysym value
!//   (0x0000 - 0xFFFF). Note that the lookup of syms is not performed in an
!//   exact manner; however, the closest match is assured.
!//
!//   string may contain escape values ("\n": newline, "\000": octal number),
!//   see RESOURCES in "man 7 X" for further details.
!//
!//   You can define a range of keysyms in one shot by loading the
!//   "keysym-list" perl extension and providing a string with pattern
!//   list/PREFIX/MIDDLE/SUFFIX, where the delimiter `/' should be a character
!//   not used by the strings.
!//
!//   Its usage can be demonstrated by an example:
!//
!//     URxvt.keysym.M-C-0x61:    list|\033<|abc|>
!//
!//   The above line is equivalent to the following three lines:
!//
!//     URxvt.keysym.Meta-Control-0x61:        \033<a>
!//     URxvt.keysym.Meta-Control-0x62:        \033<b>
!//     URxvt.keysym.Meta-Control-0x63:        \033<c>
!//
!//   If string takes the form of "command:STRING", the specified STRING is
!//   interpreted and executed as urxvt's control sequence. For example the
!//   following means "change the current locale to "zh_CN.GBK" when
!//   Control-Meta-c is being pressed":
!//
!//     URxvt.keysym.M-C-c: command:\033]701;zh_CN.GBK\007
!//
!//   If string takes the form "perl:STRING", then the specified STRING is
!//   passed to the "on_user_command" perl handler. See the urxvtperl(3)
!//   manpage. For example, the selection extension (activated via "urxvt -pe
!//   selection") listens for "selection:rot13" events:
!//
!//     URxvt.keysym.M-C-c: perl:selection:rot13
!//
!//   Due the the large number of modifier combinations, a defined key mapping
!//   will match if at least the specified identifiers are being set, and no
!//   other key mappings with those and more bits are being defined. That means
!//   that defining a key map for "a" will automatically provide definitions
!//   for "Meta-a", "Shift-a" and so on, unless some of those are defined
!//   mappings themselves.
!//
!//   Unfortunately, this will override built-in key mappings. For example if
!//   you overwrite the "Insert" key you will disable urxvt's "Shift-Insert"
!//   mapping. To re-enable that, you can poke "holes" into the user-defined
!//   keymap using the "builtin:" replacement:
!//
!//     URxvt.keysym.Insert: <my insert key sequence>
!//     URxvt.keysym.S-Insert: builtin:
!//
!//   The first line defines a mapping for "Insert" and any combination of
!//   modifiers. The second line re-establishes the default mapping for
!//   "Shift-Insert".
!//
!//   The following example will map Control-Meta-1 and Control-Meta-2 to the
!//   fonts "suxuseuro" and "9x15bold", so you can have some limited
!//   font-switching at runtime:
!//
!//     URxvt.keysym.M-C-1: command:\033]50;suxuseuro\007
!//     URxvt.keysym.M-C-2: command:\033]50;9x15bold\007
!//
!//   Other things are possible, e.g. resizing (see urxvt(7) for more info):
!//
!//     URxvt.keysym.M-C-3: command:\033[8;25;80t
!//     URxvt.keysym.M-C-4: command:\033[8;48;110t

!// perl-ext-common: string
!// perl-ext: string
!//   Comma-separated list(s) of perl extension scripts (default: "default") to use in this terminal instance.
!//
!//   Extension names can be prefixed with a "-" sign to prohibit using them.
!//   This can be useful to selectively disable some extensions loaded by
!//   default, or specified via the "perl-ext-common" resource. For example,
!//   "default,-selection" will use all the default extension except
!//   "selection".
!//
!//   Extension names can also be followed by an argument in angle brackets
!//   (e.g.        "searchable-scrollback<M-s>", which binds the hotkey for
!//   searchable scrollback to Alt/Meta-s). Mentioning the same extension
!//   multiple times with different arguments will pass multiple arguments to
!//   the extension.
!//
!//   Each extension is looked up in the library directories, loaded if
!//   necessary, and bound to the current terminal instance.
!//
!//   If both of these resources are the empty string, then the perl
!//   interpreter will not be initialized. The idea behind two options is that
!//   perl-ext-common will be used for extensions that should be available to
!//   all instances, while perl-ext is used for specific instances.
URxvt*.perl-ext-common:
URxvt*.perl-ext:

!// perl-eval: string
!//   Perl code to be evaluated when all extensions have been registered. See
!//   the urxvtperl(3) manpage.

!// perl-lib: path
!//   Colon-separated list of additional directories that hold extension
!//   scripts. When looking for perl extensions, urxvt will first look in these
!//   directories, then in $URXVT_PERL_LIB, $HOME/.urxvt/ext and lastly in
!//   /usr/lib64/urxvt/perl/.
!//
!//   See the urxvtperl(3) manpage.

!// selection.pattern-idx: perl-regex
!//   Additional selection patterns, see the urxvtperl(3) manpage for details.

!// selection-autotransform.idx: perl-transform
!//   Selection auto-transform patterns, see the urxvtperl(3) manpage for
!//   details.

!// searchable-scrollback: keysym
!//   Sets the hotkey that starts the incremental scrollback buffer search
!//   (default: "M-s").

!// url-launcher: string
!//   Specifies the program to be started with a URL argument. Used by the
!//   "selection-popup" and "matcher" perl extensions.

!// transient-for: windowid
!//   Compile frills: Sets the WM_TRANSIENT_FOR property to the given window id.

!// override-redirect: boolean
!//   Compile frills: Sets override-redirect for the terminal window, making it
!//   almost invisible to window managers

!// iso14755: boolean
!//   Turn on/off ISO 14755 (default enabled).

!// iso14755_52: boolean
!//   Turn on/off ISO 14755 5.2 mode (default enabled).

!// backgroundPixmap: file[;oplist]
!//   Compile pixbuf: Use the specified image file as the window's background
!//   and also optionally specify a colon separated list of operations to
!//   modify it. Note that you may need to quote the ";" character when using
!//   the command line option, as ";" is usually a metacharacter in shells.
!//   Supported operations are:
!//
!//   WxH+X+Y
!//       sets scale and position. "W" / "H" specify the horizontal/vertical
!//       scale (percent), and "X" / "Y" locate the image centre (percent). A
!//       scale of 0 disables scaling.
!//
!//   op=tile
!//       enables tiling
!//
!//   op=keep-aspect
!//       maintain the image aspect ratio when scaling
!//
!//   op=root-align
!//       use the position of the terminal window relative to the root window
!//       as the image offset, simulating a root window background
!//
!//   The default scale and position setting is "100x100+50+50".
!//   Alternatively, a predefined set of templates can be used to achieve the
!//   most common setups:
!//
!//   style=tiled
!//       the image is tiled with no scaling. Equivalent to 0x0+0+0:op=tile
!//
!//   style=aspect-stretched
!//       the image is scaled to fill the whole window maintaining the aspect
!//       ratio and centered. Equivalent to 100x100+50+50:op=keep-aspect
!//
!//   style=stretched
!//       the image is scaled to fill the whole window. Equivalent to 100x100
!//
!//   style=centered
!//       the image is centered with no scaling. Equivalent to 0x0+50+50
!//
!//   style=root-tiled
!//       the image is tiled with no scaling and using 'root' positioning.
!//       Equivalent to 0x0:op=tile:op=root-align
!//
!//   If multiple templates are specified the last one wins. Note that a
!//   template overrides all the scale, position and operations settings.
!//
!//   If used in conjunction with pseudo-transparency, the specified pixmap
!//   will be blended over the transparent background using alpha- blending.

!// transparent: boolean
!//   Turn on/off pseudo-transparency by using the root pixmap as background.

!// tintColor: colour
!//   Tint the transparent background with the given colour. Note that a black
!//   tint yields a completely black image while a white tint yields the image
!//   unchanged.

!// shading: number
!//   Darken (0 .. 99) or lighten (101 .. 200) the transparent background.
!//   A value of 100 means no shading.

!// blurRadius: HxV
!//   Apply gaussian blur with the specified radius to the transparent
!//   background. If a single number is specified, the vertical and horizontal
!//   radii are considered to be the same. Setting one of the radii to 1 and
!//   the other to a large number creates interesting effects on some
!//   backgrounds. The maximum radius value is 128. An horizontal or vertical
!//   radius of 0 disables blurring.

!// path: path
!//   Specify the colon-delimited search path for finding background image
!//   files.

